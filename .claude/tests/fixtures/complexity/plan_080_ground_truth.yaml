# Plan 080 Ground Truth Complexity Ratings
# Manual assessment based on actual implementation experience
# Scale: 0.0-15.0 (0=trivial, 5=simple, 8=complex, 12=very complex, 15=extreme)
#
# Date: 2025-10-21
# Assessor: Human developer based on implementation history
# Purpose: Calibration dataset for complexity formula validation

phases:
  - phase_number: 0
    phase_name: "CRITICAL - Remove Command-to-Command Invocations"
    ground_truth_score: 9.0
    rationale: |
      High complexity due to architectural refactoring across multiple files.
      Required deep understanding of command architecture patterns and behavioral injection.
      Created audit system, validation scripts, and test integration.
      4 deliverables: audit report, refactored orchestrate.md, validation script, tests.
      However, tasks were well-defined and scope was contained.
    factors:
      tasks: ~12 (audit, refactor, validate, test, document)
      files: ~5 (orchestrate.md, audit, validation, tests, docs)
      risk: High (architectural change, pattern compliance critical)
      test_scope: Medium (validation script, integration tests)
      dependencies: None (Phase 0, foundational)

  - phase_number: 1
    phase_name: "Foundation - Location Specialist and Artifact Organization"
    ground_truth_score: 8.0
    rationale: |
      Medium-high complexity due to multi-stage expansion during implementation.
      Originally planned as simpler but expanded to include debug loop and documentation phase.
      7 stages total (2 were simplified, but debug loop was complex).
      Significant behavioral injection across all workflow phases.
      Required coordination across research, planning, implementation, debug, documentation phases.
    factors:
      tasks: ~25 (location specialist, 5 phase integrations, validation, debug loop, doc phase)
      files: ~8 (agent, orchestrate sections, validation)
      risk: Medium (foundation affects all subsequent phases)
      test_scope: Medium (end-to-end workflow testing)
      dependencies: Phase 0

  - phase_number: 2
    phase_name: "Research Synthesis - Overview Report Generation"
    ground_truth_score: 5.0
    rationale: |
      Medium complexity, straightforward agent creation and integration.
      research-synthesizer agent is conceptually simple (aggregate reports).
      Integration point in orchestrate.md was clear.
      Testing was standard workflow verification.
      Relatively self-contained without cascading changes.
    factors:
      tasks: ~8 (agent creation, orchestrate integration, cross-ref validation, testing)
      files: ~3 (agent file, orchestrate.md section, tests)
      risk: Low (research phase, no breaking changes)
      test_scope: Low (workflow verification only)
      dependencies: Phase 1

  - phase_number: 3
    phase_name: "Complexity Evaluation - Automated Plan Analysis"
    ground_truth_score: 10.0
    rationale: |
      High complexity due to algorithmic design and multi-stage calibration requirements.
      6 stages completed (formula design, agent, integration, thresholds, metadata, scoring algorithm).
      2 additional stages pending (calibration, validation).
      Mathematical formula with 5 factors and weighted scoring.
      Integration with orchestrate.md and threshold configuration.
      THIS phase is being implemented now, demonstrating its actual complexity.
      Calibration issues required research and plan revision.
    factors:
      tasks: ~40+ (8 stages × 5 tasks average)
      files: ~12 (agent, formula spec, thresholds util, orchestrate integration, tests, fixtures)
      risk: High (affects downstream expansion decisions, accuracy critical)
      test_scope: High (correlation validation, performance benchmarks, integration tests)
      dependencies: Phase 1, Phase 2

  - phase_number: 4
    phase_name: "Plan Expansion - Hierarchical Structure and Automated Expansion"
    ground_truth_score: 11.0
    rationale: |
      Very high complexity due to hierarchical file structure management.
      Must handle Level 0 → Level 1 → Level 2 expansion recursively.
      File movement, directory creation, parent plan updates with summaries.
      Dependency metadata parsing and preservation across levels.
      expansion-specialist agent must handle complex state transitions.
      Risk of breaking existing plans if expansion logic incorrect.
      Estimated as most complex phase based on design (not yet implemented).
    factors:
      tasks: ~45+ (expansion marked as complex in parent plan)
      files: ~15 (agent, expansion utilities, plan hierarchy management, validation)
      risk: Very High (plan structure correctness critical, affects implementation)
      test_scope: High (expansion verification, hierarchy validation, rollback testing)
      dependencies: Phase 3

  - phase_number: 5
    phase_name: "Wave-Based Implementation - Parallel Execution Pattern Orchestration"
    ground_truth_score: 12.0
    rationale: |
      Maximum complexity due to parallel execution coordination.
      Dependency graph analysis, topological sort, wave identification.
      Multiple parallel agents (implementer-coordinator + N executors).
      Checkpoint management across concurrent executors.
      Progress tracking and hierarchical plan updates during parallel execution.
      Failure handling with independent phase continuation.
      Real-time progress visualization.
      Highest complexity in entire plan (marked 10/10 in parent plan).
    factors:
      tasks: ~50+ (marked as maximum complexity)
      files: ~20+ (agents, dependency analyzer, checkpoint manager, progress reporter)
      risk: Very High (parallel execution bugs, race conditions, context constraints)
      test_scope: Very High (wave execution, checkpoints, failure scenarios, performance)
      dependencies: Phase 4

  - phase_number: 6
    phase_name: "Comprehensive Testing - Dedicated Test Suite Execution"
    ground_truth_score: 7.0
    rationale: |
      Medium-high complexity due to test framework integration.
      test-specialist agent with structured result extraction.
      Conditional debugging invocation based on test results.
      Test output parsing and artifact management.
      Context reduction (18k → <100 tokens).
      Relatively focused scope compared to Phases 4-5.
    factors:
      tasks: ~20 (agent, test execution, result parsing, conditional debug, validation)
      files: ~8 (agent, orchestrate integration, test output management, docs)
      risk: Medium (test integration, result parsing correctness)
      test_scope: High (ironically, this phase tests testing)
      dependencies: Phase 0 (marked explicitly)

  - phase_number: 7
    phase_name: "Progress Tracking - Automated Reminders and Spec Updates"
    ground_truth_score: 8.0
    rationale: |
      High complexity due to hierarchical checkbox propagation.
      spec-updater integration for L2 → L1 → L0 updates.
      git-commit-helper agent for standardized commit messages.
      Automated reminder injection by expansion-specialist.
      Real-time progress visualization in orchestrator.
      Wave-based status display coordination.
      Cross-phase integration (touches all phases).
    factors:
      tasks: ~25 (reminder injection, spec updater, git helper, progress viz, testing)
      files: ~10 (agents, spec updater logic, progress display, git integration)
      risk: Medium-High (plan integrity, git commit correctness)
      test_scope: Medium (hierarchy updates, commit messages, progress display)
      dependencies: Phase 0, Phase 6

# Summary Statistics
summary:
  total_phases: 8
  mean_score: 8.75
  median_score: 8.5
  std_dev: 2.19
  min_score: 5.0
  max_score: 12.0

  distribution:
    low_complexity: 0         # 0.0-3.0
    medium_complexity: 1      # 3.1-6.0 (Phase 2)
    medium_high_complexity: 3 # 6.1-8.0 (Phases 1, 6, 7)
    high_complexity: 3        # 8.1-10.0 (Phases 0, 3, 4)
    very_high_complexity: 1   # 10.1-15.0 (Phase 5)

# Notes on Ground Truth Assessment
#
# 1. **Actual Implementation Experience**: Ratings based on completed phases (0-3)
#    reflect real implementation difficulty, not estimated complexity.
#
# 2. **Design Complexity for Pending Phases**: Phases 4-7 rated based on design
#    complexity from expanded phase files and parent plan descriptions.
#
# 3. **Relative Ranking Confidence**:
#    - High confidence: Phases 0-3 (implemented)
#    - Medium confidence: Phases 6-7 (well-specified)
#    - Lower confidence: Phases 4-5 (not yet implemented, but design is very complex)
#
# 4. **Scoring Philosophy**:
#    - 5.0: Straightforward agent + integration (Phase 2)
#    - 8.0: Multi-stage with coordination (Phases 1, 7)
#    - 9.0: Architectural refactoring (Phase 0)
#    - 10.0: Algorithmic design + calibration (Phase 3)
#    - 11.0: Hierarchical state management (Phase 4)
#    - 12.0: Parallel execution coordination (Phase 5)
#
# 5. **Factors Influencing Ratings**:
#    - Task count and scope
#    - Number of files/systems touched
#    - Risk level (architectural, correctness, performance)
#    - Integration complexity (cross-phase dependencies)
#    - Testing requirements
#    - State management complexity
