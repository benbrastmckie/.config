name: "Debug Workflow"
description: "Template for investigating issues with structured investigation, root cause analysis, fix implementation, and regression testing"
category: "debugging"
complexity_level: "medium"
estimated_time: "4-6 hours"
variables:
  - name: issue_description
    description: "Brief description of the issue or bug being investigated"
    type: string
    required: true
  - name: affected_components
    description: "Components, modules, or files affected by the issue"
    type: array
    required: true
  - name: priority
    description: "Issue priority (low, medium, high, critical)"
    type: string
    required: false
    default: "medium"
  - name: error_messages
    description: "Any error messages or stack traces observed"
    type: string
    required: false
  - name: reproduction_steps
    description: "Steps to reproduce the issue"
    type: array
    required: false
phases:
  - name: "Investigation and Data Collection"
    dependencies: []
    tasks:
      - "Review issue description: {{issue_description}}"
      - "Analyze affected components: {{#each affected_components}}{{this}}{{#unless @last}}, {{/unless}}{{/each}}"
      - "{{#if error_messages}}Examine error messages and stack traces{{/if}}"
      - "{{#if reproduction_steps}}Reproduce the issue following steps{{/if}}"
      - "Collect relevant logs and metrics"
      - "Review recent code changes in affected areas (git log)"
      - "Check for similar issues in issue tracker/documentation"
      - "Document investigation findings in specs/reports/"
  - name: "Root Cause Analysis"
    dependencies: [1]
    tasks:
      - "Analyze code flow leading to the issue"
      - "Identify specific function/method where issue occurs"
      - "Determine if issue is logic error, race condition, or edge case"
      - "Review related test coverage (identify gaps)"
      - "Create minimal reproduction test case"
      - "Document root cause with code references"
      - "Assess impact scope (how widespread is the issue)"
  - name: "Fix Implementation"
    dependencies: [2]
    tasks:
      - "Design fix strategy based on root cause"
      - "Implement code changes in affected components"
      - "Add/update unit tests to cover the bug"
      - "Add integration tests if multiple components involved"
      - "Update error handling and validation as needed"
      - "Add logging/debugging output for future troubleshooting"
      - "Review code changes for potential side effects"
      - "Run affected tests to verify fix"
  - name: "Regression Testing and Validation"
    dependencies: [3]
    tasks:
      - "Run full test suite to check for regressions"
      - "Manually test the reproduction steps (verify issue resolved)"
      - "Test edge cases and boundary conditions"
      - "Verify fix works across different environments/configurations"
      - "Performance testing if fix involves optimization"
      - "Update documentation with fix details"
      - "Add issue reference to commit message"
      - "{{#if_eq priority 'critical'}}Prepare hotfix deployment plan{{/if_eq}}"
      - "{{#if_eq priority 'high'}}Notify stakeholders of fix{{/if_eq}}"
research_topics:
  - "Common causes of {{issue_description}} in similar systems"
  - "Best practices for preventing similar issues"
  - "Testing strategies for {{#each affected_components}}{{this}}{{#unless @last}}, {{/unless}}{{/each}}"
  - "Debugging techniques for {{priority}} priority issues"
